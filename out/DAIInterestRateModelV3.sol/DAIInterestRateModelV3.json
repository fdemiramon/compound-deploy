{"abi":[{"type":"constructor","inputs":[{"name":"jumpMultiplierPerYear","type":"uint256","internalType":"uint256"},{"name":"kink_","type":"uint256","internalType":"uint256"},{"name":"pot_","type":"address","internalType":"address"},{"name":"jug_","type":"address","internalType":"address"},{"name":"owner_","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"assumedOneMinusReserveFactorMantissa","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"baseRatePerBlock","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"blocksPerYear","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"dsrPerBlock","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"gapPerBlock","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBorrowRate","inputs":[{"name":"cash","type":"uint256","internalType":"uint256"},{"name":"borrows","type":"uint256","internalType":"uint256"},{"name":"reserves","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getSupplyRate","inputs":[{"name":"cash","type":"uint256","internalType":"uint256"},{"name":"borrows","type":"uint256","internalType":"uint256"},{"name":"reserves","type":"uint256","internalType":"uint256"},{"name":"reserveFactorMantissa","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"isInterestRateModel","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"jumpMultiplierPerBlock","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"kink","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"multiplierPerBlock","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"poke","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateJumpRateModel","inputs":[{"name":"baseRatePerYear","type":"uint256","internalType":"uint256"},{"name":"gapPerYear","type":"uint256","internalType":"uint256"},{"name":"jumpMultiplierPerYear","type":"uint256","internalType":"uint256"},{"name":"kink_","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"utilizationRate","inputs":[{"name":"cash","type":"uint256","internalType":"uint256"},{"name":"borrows","type":"uint256","internalType":"uint256"},{"name":"reserves","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"event","name":"NewInterestParams","inputs":[{"name":"baseRatePerBlock","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"multiplierPerBlock","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"jumpMultiplierPerBlock","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"kink","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x608060405234801561001057600080fd5b50604051610edd380380610edd83398101604081905261002f9161045f565b600080546001600160a01b0319166001600160a01b03831617815580868684838084848461005f848085856100c4565b5050505050505050505062201480668e1bc9bf04000061007f91906104cd565b600555600680546001600160a01b038086166001600160a01b03199283161790925560078054928516929091169190911790556100ba61016c565b505050505061056f565b6100d162201480856104cd565b6002556100e181622014806104ef565b6100f3670de0b6b3a7640000856104ef565b6100fd91906104cd565b60015561010d62201480836104cd565b60038190556004829055600254600154604080519283526020830191909152810191909152606081018290527f6960ab234c7ef4b0c9197100f5393cfcde7c453ac910a27bd2000aa1dd4c068d9060800160405180910390a150505050565b600754604051636cb1c69b60e11b8152644554482d4160d81b60048201526000916001600160a01b03169063d9638d36906024016040805180830381865afa1580156101bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e0919061050c565b5090506000600f633b9aca006b033b2e3c9fd0803ce8000000600760009054906101000a90046001600160a01b03166001600160a01b0316635001f3b56040518163ffffffff1660e01b8152600401602060405180830381865afa15801561024c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102709190610530565b61027a9086610549565b610284919061055c565b61028e91906104cd565b61029891906104ef565b9050670d2f13f7789f0000670de0b6b3a76400006102b4610393565b6102be91906104ef565b6102c891906104cd565b600281905581111561031757600454670de0b6b3a7640000600554600254846102f1919061055c565b6102fb9190610549565b61030591906104ef565b61030f91906104cd565b60015561033e565b600454670de0b6b3a764000060055461033091906104ef565b61033a91906104cd565b6001555b6002546001546003546004546040805194855260208501939093529183015260608201527f6960ab234c7ef4b0c9197100f5393cfcde7c453ac910a27bd2000aa1dd4c068d9060800160405180910390a15050565b6000600f633b9aca006b033b2e3c9fd0803ce8000000600660009054906101000a90046001600160a01b03166001600160a01b031663487bf0826040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104209190610530565b61042a919061055c565b61043491906104cd565b61043e91906104ef565b905090565b80516001600160a01b038116811461045a57600080fd5b919050565b600080600080600060a0868803121561047757600080fd5b85516020870151909550935061048f60408701610443565b925061049d60608701610443565b91506104ab60808701610443565b90509295509295909350565b634e487b7160e01b600052601160045260246000fd5b6000826104ea57634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417610506576105066104b7565b92915050565b6000806040838503121561051f57600080fd5b505080516020909101519092909150565b60006020828403121561054257600080fd5b5051919050565b80820180821115610506576105066104b7565b81810381811115610506576105066104b7565b61095f8061057e6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638da5cb5b11610097578063b9f9850a11610066578063b9f9850a146101d0578063f14039de146101d9578063f52d21f3146101e2578063fd2da339146101eb57600080fd5b80638da5cb5b1461018057806396456c5c146101ab578063a385fb96146101b3578063b8168816146101bd57600080fd5b80632191f92a116100d35780632191f92a1461013d5780636dac7cd5146101555780636e71e2d8146101645780638726bb891461017757600080fd5b806315f24053146100fa57806318178358146101205780632037f3e71461012a575b600080fd5b61010d610108366004610813565b6101f4565b6040519081526020015b60405180910390f35b61012861020b565b005b61012861013836600461083f565b610432565b610145600181565b6040519015158152602001610117565b61010d670d2f13f7789f000081565b61010d610172366004610813565b6104ca565b61010d60015481565b600054610193906001600160a01b031681565b6040516001600160a01b039091168152602001610117565b61010d61050d565b61010d6220148081565b61010d6101cb36600461083f565b6105bd565b61010d60035481565b61010d60025481565b61010d60055481565b61010d60045481565b6000610201848484610630565b90505b9392505050565b600754604051636cb1c69b60e11b8152644554482d4160d81b60048201526000916001600160a01b03169063d9638d36906024016040805180830381865afa15801561025b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027f9190610871565b5090506000600f633b9aca006b033b2e3c9fd0803ce8000000600760009054906101000a90046001600160a01b03166001600160a01b0316635001f3b56040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030f9190610895565b61031990866108c4565b61032391906108dd565b61032d91906108f0565b6103379190610912565b9050670d2f13f7789f0000670de0b6b3a764000061035361050d565b61035d9190610912565b61036791906108f0565b60028190558111156103b657600454670de0b6b3a76400006005546002548461039091906108dd565b61039a91906108c4565b6103a49190610912565b6103ae91906108f0565b6001556103dd565b600454670de0b6b3a76400006005546103cf9190610912565b6103d991906108f0565b6001555b6002546001546003546004546040805194855260208501939093529183015260608201527f6960ab234c7ef4b0c9197100f5393cfcde7c453ac910a27bd2000aa1dd4c068d9060800160405180910390a15050565b6000546001600160a01b0316331461049f5760405162461bcd60e51b815260206004820152602660248201527f6f6e6c7920746865206f776e6572206d61792063616c6c20746869732066756e60448201526531ba34b7b71760d11b606482015260840160405180910390fd5b6104ac62201480846108f0565b6005556104bc60008084846106fb565b6104c461020b565b50505050565b6000826000036104dc57506000610204565b816104e784866108c4565b6104f191906108dd565b610503670de0b6b3a764000085610912565b61020191906108f0565b6000600f633b9aca006b033b2e3c9fd0803ce8000000600660009054906101000a90046001600160a01b03166001600160a01b031663487bf0826040518163ffffffff1660e01b8152600401602060405180830381865afa158015610576573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059a9190610895565b6105a491906108dd565b6105ae91906108f0565b6105b89190610912565b905090565b6000806105cc868686866107a3565b90506000846105db87896108c4565b6105e591906108dd565b9050806000036105f757509050610628565b60008161060261050d565b61060c908a610912565b61061691906108f0565b905061062283826108c4565b93505050505b949350505050565b60008061063e8585856104ca565b9050600454811161067f57600254670de0b6b3a7640000600154836106639190610912565b61066d91906108f0565b61067791906108c4565b915050610204565b6000600254670de0b6b3a764000060015460045461069d9190610912565b6106a791906108f0565b6106b191906108c4565b90506000600454836106c391906108dd565b905081670de0b6b3a7640000600354836106dd9190610912565b6106e791906108f0565b6106f191906108c4565b9350505050610204565b61070862201480856108f0565b6002556107188162201480610912565b61072a670de0b6b3a764000085610912565b61073491906108f0565b60015561074462201480836108f0565b60038190556004829055600254600154604080519283526020830191909152810191909152606081018290527f6960ab234c7ef4b0c9197100f5393cfcde7c453ac910a27bd2000aa1dd4c068d9060800160405180910390a150505050565b6000806107b883670de0b6b3a76400006108dd565b905060006107c7878787610630565b90506000670de0b6b3a76400006107de8484610912565b6107e891906108f0565b9050670de0b6b3a7640000816107ff8a8a8a6104ca565b6108099190610912565b61062291906108f0565b60008060006060848603121561082857600080fd5b505081359360208301359350604090920135919050565b6000806000806080858703121561085557600080fd5b5050823594602084013594506040840135936060013592509050565b6000806040838503121561088457600080fd5b505080516020909101519092909150565b6000602082840312156108a757600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156108d7576108d76108ae565b92915050565b818103818111156108d7576108d76108ae565b60008261090d57634e487b7160e01b600052601260045260246000fd5b500490565b80820281158282048414176108d7576108d76108ae56fea2646970667358221220b86780fa4e9f6a9b1796f40120d7609c36d8345e395db86b8ed672880783c93f64736f6c634300081b0033","sourceMap":"510:4863:35:-:0;;;1658:314;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1799:1;2199:14:21;;-1:-1:-1;;;;;;2199:14:21;-1:-1:-1;;;;;2199:14:21;;;;;1799:1:35;1805:21;1828:5;2199:14:21;1799:1:35;;1805:21;1828:5;2199:14:21;2224:93;1799:1:35;;1805:21;1828:5;2224:27:21;:93::i;:::-;2008:316;;;;;856:275:49;;;;;867:7:21::1;1871:4:35;:20;;;;:::i;:::-;1857:11;:34:::0;1901:3:::1;:19:::0;;-1:-1:-1;;;;;1901:19:35;;::::1;-1:-1:-1::0;;;;;;1901:19:35;;::::1;;::::0;;;1930:3:::1;:19:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;1959:6:::1;:4;:6::i;:::-;1658:314:::0;;;;;510:4863;;6188:527:21;6399:31;867:7;6399:15;:31;:::i;:::-;6380:16;:50;6491:21;6507:5;867:7;6491:21;:::i;:::-;6462:24;551:4;6462:17;:24;:::i;:::-;6461:52;;;;:::i;:::-;6440:18;:73;6548:37;867:7;6548:21;:37;:::i;:::-;6523:22;:62;;;6595:4;:12;;;6641:16;;6659:18;;6623:85;;;1559:25:58;;;1615:2;1600:18;;1593:34;;;;1643:18;;1636:34;;;;1701:2;1686:18;;1679:34;;;6623:85:21;;1546:3:58;1531:19;6623:85:21;;;;;;;6188:527;;;;:::o;4562:809:35:-;4613:3;;:17;;-1:-1:-1;;;4613:17:35;;-1:-1:-1;;;4613:17:35;;;1933:26:58;4596:12:35;;-1:-1:-1;;;;;4613:3:35;;:8;;1906:18:58;;4613:17:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4595:35;;;4640:28;754:2;700:3;645:4;4680:3;;;;;;;;;-1:-1:-1;;;;;4680:3:35;-1:-1:-1;;;;;4680:8:35;;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4673:17;;:4;:17;:::i;:::-;:28;;;;:::i;:::-;4672:50;;;;:::i;:::-;4671:72;;;;:::i;:::-;4640:103;-1:-1:-1;1099:7:35;599:4;4849:13;:11;:13::i;:::-;:20;;;;:::i;:::-;4848:61;;;;:::i;:::-;4829:16;:80;;;5027:39;-1:-1:-1;5023:241:35;;;5170:4;;599;5147:11;;5128:16;;5105:20;:39;;;;:::i;:::-;:53;;;;:::i;:::-;5104:62;;;;:::i;:::-;5103:71;;;;:::i;:::-;5082:18;:92;5023:241;;;5249:4;;599;5227:11;;:18;;;;:::i;:::-;5226:27;;;;:::i;:::-;5205:18;:48;5023:241;5297:16;;5315:18;;5335:22;;5359:4;;5279:85;;;1559:25:58;;;1615:2;1600:18;;1593:34;;;;1643:18;;;1636:34;1701:2;1686:18;;1679:34;5279:85:35;;1546:3:58;1531:19;5279:85:35;;;;;;;4585:786;;4562:809::o;4176:256::-;4220:7;754:2;700:3;645:4;4248:3;;;;;;;;;-1:-1:-1;;;;;4248:3:35;-1:-1:-1;;;;;4248:7:35;;:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:20;;;;:::i;:::-;4247:42;;;;:::i;:::-;4246:64;;;;:::i;:::-;4239:71;;4176:256;:::o;14:177:58:-;93:13;;-1:-1:-1;;;;;135:31:58;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:600::-;302:6;310;318;326;334;387:3;375:9;366:7;362:23;358:33;355:53;;;404:1;401;394:12;355:53;449:16;;555:2;540:18;;534:25;449:16;;-1:-1:-1;534:25:58;-1:-1:-1;604:49:58;649:2;634:18;;604:49;:::i;:::-;594:59;;672:49;717:2;706:9;702:18;672:49;:::i;:::-;662:59;;740:50;785:3;774:9;770:19;740:50;:::i;:::-;730:60;;196:600;;;;;;;;:::o;801:127::-;862:10;857:3;853:20;850:1;843:31;893:4;890:1;883:15;917:4;914:1;907:15;933:217;973:1;999;989:132;;1043:10;1038:3;1034:20;1031:1;1024:31;1078:4;1075:1;1068:15;1106:4;1103:1;1096:15;989:132;-1:-1:-1;1135:9:58;;933:217::o;1155:168::-;1228:9;;;1259;;1276:15;;;1270:22;;1256:37;1246:71;;1297:18;;:::i;:::-;1155:168;;;;:::o;1970:343::-;2049:6;2057;2110:2;2098:9;2089:7;2085:23;2081:32;2078:52;;;2126:1;2123;2116:12;2078:52;-1:-1:-1;;2171:16:58;;2277:2;2262:18;;;2256:25;2171:16;;2256:25;;-1:-1:-1;1970:343:58:o;2318:230::-;2388:6;2441:2;2429:9;2420:7;2416:23;2412:32;2409:52;;;2457:1;2454;2447:12;2409:52;-1:-1:-1;2502:16:58;;2318:230;-1:-1:-1;2318:230:58:o;2553:125::-;2618:9;;;2639:10;;;2636:36;;;2652:18;;:::i;2683:128::-;2750:9;;;2771:11;;;2768:37;;;2785:18;;:::i;2683:128::-;510:4863:35;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b50600436106100f55760003560e01c80638da5cb5b11610097578063b9f9850a11610066578063b9f9850a146101d0578063f14039de146101d9578063f52d21f3146101e2578063fd2da339146101eb57600080fd5b80638da5cb5b1461018057806396456c5c146101ab578063a385fb96146101b3578063b8168816146101bd57600080fd5b80632191f92a116100d35780632191f92a1461013d5780636dac7cd5146101555780636e71e2d8146101645780638726bb891461017757600080fd5b806315f24053146100fa57806318178358146101205780632037f3e71461012a575b600080fd5b61010d610108366004610813565b6101f4565b6040519081526020015b60405180910390f35b61012861020b565b005b61012861013836600461083f565b610432565b610145600181565b6040519015158152602001610117565b61010d670d2f13f7789f000081565b61010d610172366004610813565b6104ca565b61010d60015481565b600054610193906001600160a01b031681565b6040516001600160a01b039091168152602001610117565b61010d61050d565b61010d6220148081565b61010d6101cb36600461083f565b6105bd565b61010d60035481565b61010d60025481565b61010d60055481565b61010d60045481565b6000610201848484610630565b90505b9392505050565b600754604051636cb1c69b60e11b8152644554482d4160d81b60048201526000916001600160a01b03169063d9638d36906024016040805180830381865afa15801561025b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027f9190610871565b5090506000600f633b9aca006b033b2e3c9fd0803ce8000000600760009054906101000a90046001600160a01b03166001600160a01b0316635001f3b56040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030f9190610895565b61031990866108c4565b61032391906108dd565b61032d91906108f0565b6103379190610912565b9050670d2f13f7789f0000670de0b6b3a764000061035361050d565b61035d9190610912565b61036791906108f0565b60028190558111156103b657600454670de0b6b3a76400006005546002548461039091906108dd565b61039a91906108c4565b6103a49190610912565b6103ae91906108f0565b6001556103dd565b600454670de0b6b3a76400006005546103cf9190610912565b6103d991906108f0565b6001555b6002546001546003546004546040805194855260208501939093529183015260608201527f6960ab234c7ef4b0c9197100f5393cfcde7c453ac910a27bd2000aa1dd4c068d9060800160405180910390a15050565b6000546001600160a01b0316331461049f5760405162461bcd60e51b815260206004820152602660248201527f6f6e6c7920746865206f776e6572206d61792063616c6c20746869732066756e60448201526531ba34b7b71760d11b606482015260840160405180910390fd5b6104ac62201480846108f0565b6005556104bc60008084846106fb565b6104c461020b565b50505050565b6000826000036104dc57506000610204565b816104e784866108c4565b6104f191906108dd565b610503670de0b6b3a764000085610912565b61020191906108f0565b6000600f633b9aca006b033b2e3c9fd0803ce8000000600660009054906101000a90046001600160a01b03166001600160a01b031663487bf0826040518163ffffffff1660e01b8152600401602060405180830381865afa158015610576573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059a9190610895565b6105a491906108dd565b6105ae91906108f0565b6105b89190610912565b905090565b6000806105cc868686866107a3565b90506000846105db87896108c4565b6105e591906108dd565b9050806000036105f757509050610628565b60008161060261050d565b61060c908a610912565b61061691906108f0565b905061062283826108c4565b93505050505b949350505050565b60008061063e8585856104ca565b9050600454811161067f57600254670de0b6b3a7640000600154836106639190610912565b61066d91906108f0565b61067791906108c4565b915050610204565b6000600254670de0b6b3a764000060015460045461069d9190610912565b6106a791906108f0565b6106b191906108c4565b90506000600454836106c391906108dd565b905081670de0b6b3a7640000600354836106dd9190610912565b6106e791906108f0565b6106f191906108c4565b9350505050610204565b61070862201480856108f0565b6002556107188162201480610912565b61072a670de0b6b3a764000085610912565b61073491906108f0565b60015561074462201480836108f0565b60038190556004829055600254600154604080519283526020830191909152810191909152606081018290527f6960ab234c7ef4b0c9197100f5393cfcde7c453ac910a27bd2000aa1dd4c068d9060800160405180910390a150505050565b6000806107b883670de0b6b3a76400006108dd565b905060006107c7878787610630565b90506000670de0b6b3a76400006107de8484610912565b6107e891906108f0565b9050670de0b6b3a7640000816107ff8a8a8a6104ca565b6108099190610912565b61062291906108f0565b60008060006060848603121561082857600080fd5b505081359360208301359350604090920135919050565b6000806000806080858703121561085557600080fd5b5050823594602084013594506040840135936060013592509050565b6000806040838503121561088457600080fd5b505080516020909101519092909150565b6000602082840312156108a757600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156108d7576108d76108ae565b92915050565b818103818111156108d7576108d76108ae565b60008261090d57634e487b7160e01b600052601260045260246000fd5b500490565b80820281158282048414176108d7576108d76108ae56fea2646970667358221220b86780fa4e9f6a9b1796f40120d7609c36d8345e395db86b8ed672880783c93f64736f6c634300081b0033","sourceMap":"510:4863:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;667:183:49;;;;;;:::i;:::-;;:::i;:::-;;;631:25:58;;;619:2;604:18;667:183:49;;;;;;;;4562:809:35;;;:::i;:::-;;2543:402;;;;;;:::i;:::-;;:::i;272:47:47:-;;315:4;272:47;;;;;1424:14:58;;1417:22;1399:41;;1387:2;1372:18;272:47:47;1259:187:58;1036:70:35;;1099:7;1036:70;;3586:292:21;;;;;;:::i;:::-;;:::i;989:33::-;;;;;;684:20;;;;;-1:-1:-1;;;;;684:20:21;;;;;;-1:-1:-1;;;;;1615:32:58;;;1597:51;;1585:2;1570:18;684:20:21;1451:203:58;4176:256:35;;;:::i;827:47:21:-;;867:7;827:47;;3428:585:35;;;;;;:::i;:::-;;:::i;1271:37:21:-;;;;;;1135:31;;;;;;873:26:35;;;;;;1408:19:21;;;;;;667:183:49;771:7;797:46;819:4;825:7;834:8;797:21;:46::i;:::-;790:53;;667:183;;;;;;:::o;4562:809:35:-;4613:3;;:17;;-1:-1:-1;;;4613:17:35;;-1:-1:-1;;;4613:17:35;;;1868:26:58;4596:12:35;;-1:-1:-1;;;;;4613:3:35;;:8;;1841:18:58;;4613:17:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4595:35;;;4640:28;754:2;700:3;645:4;4680:3;;;;;;;;;-1:-1:-1;;;;;4680:3:35;-1:-1:-1;;;;;4680:8:35;;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4673:17;;:4;:17;:::i;:::-;:28;;;;:::i;:::-;4672:50;;;;:::i;:::-;4671:72;;;;:::i;:::-;4640:103;;1099:7;599:4;4849:13;:11;:13::i;:::-;:20;;;;:::i;:::-;4848:61;;;;:::i;:::-;4829:16;:80;;;5027:39;-1:-1:-1;5023:241:35;;;5170:4;;599;5147:11;;5128:16;;5105:20;:39;;;;:::i;:::-;:53;;;;:::i;:::-;5104:62;;;;:::i;:::-;5103:71;;;;:::i;:::-;5082:18;:92;5023:241;;;5249:4;;599;5227:11;;:18;;;;:::i;:::-;5226:27;;;;:::i;:::-;5205:18;:48;5023:241;5297:16;;5315:18;;5335:22;;5359:4;;5279:85;;;3509:25:58;;;3565:2;3550:18;;3543:34;;;;3593:18;;;3586:34;3651:2;3636:18;;3629:34;5279:85:35;;3496:3:58;3481:19;5279:85:35;;;;;;;4585:786;;4562:809::o;2543:402::-;2751:5;;-1:-1:-1;;;;;2751:5:35;2737:10;:19;2729:70;;;;-1:-1:-1;;;2729:70:35;;3876:2:58;2729:70:35;;;3858:21:58;3915:2;3895:18;;;3888:30;3954:34;3934:18;;;3927:62;-1:-1:-1;;;4005:18:58;;;3998:36;4051:19;;2729:70:35;;;;;;;;2823:26;867:7:21;2823:10:35;:26;:::i;:::-;2809:11;:40;2859:63;2887:1;;2893:21;2916:5;2859:27;:63::i;:::-;2932:6;:4;:6::i;:::-;2543:402;;;;:::o;3586:292:21:-;3681:7;3763;3774:1;3763:12;3759:51;;-1:-1:-1;3798:1:21;3791:8;;3759:51;3862:8;3845:14;3852:7;3845:4;:14;:::i;:::-;:25;;;;:::i;:::-;3827:14;551:4;3827:7;:14;:::i;:::-;:44;;;;:::i;4176:256:35:-;4220:7;754:2;700:3;645:4;4248:3;;;;;;;;;-1:-1:-1;;;;;4248:3:35;-1:-1:-1;;;;;4248:7:35;;:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:20;;;;:::i;:::-;4247:42;;;;:::i;:::-;4246:64;;;;:::i;:::-;4239:71;;4176:256;:::o;3428:585::-;3633:7;3656:20;3679:67;3699:4;3705:7;3714:8;3724:21;3679:19;:67::i;:::-;3656:90;-1:-1:-1;3757:18:35;3795:8;3778:14;3785:7;3778:4;:14;:::i;:::-;:25;;;;:::i;:::-;3757:46;;3817:10;3831:1;3817:15;3813:194;;-1:-1:-1;3855:12:35;-1:-1:-1;3848:19:35;;3813:194;3898:16;3942:10;3925:13;:11;:13::i;:::-;3918:20;;:4;:20;:::i;:::-;3917:35;;;;:::i;:::-;3898:54;-1:-1:-1;3973:23:35;3984:12;3898:54;3973:23;:::i;:::-;3966:30;;;;;3428:585;;;;;;;:::o;4257:532:21:-;4360:7;4379:12;4394:40;4410:4;4416:7;4425:8;4394:15;:40::i;:::-;4379:55;;4457:4;;4449;:12;4445:338;;4523:16;;551:4;4493:18;;4486:4;:25;;;;:::i;:::-;4485:34;;;;:::i;:::-;4484:55;;;;:::i;:::-;4477:62;;;;;4445:338;4570:18;4630:16;;551:4;4600:18;;4593:4;;:25;;;;:::i;:::-;4592:34;;;;:::i;:::-;4591:55;;;;:::i;:::-;4570:76;;4660:18;4688:4;;4681;:11;;;;:::i;:::-;4660:32;;4762:10;551:4;4728:22;;4715:10;:35;;;;:::i;:::-;4714:44;;;;:::i;:::-;4713:59;;;;:::i;:::-;4706:66;;;;;;;6188:527;6399:31;867:7;6399:15;:31;:::i;:::-;6380:16;:50;6491:21;6507:5;867:7;6491:21;:::i;:::-;6462:24;551:4;6462:17;:24;:::i;:::-;6461:52;;;;:::i;:::-;6440:18;:73;6548:37;867:7;6548:21;:37;:::i;:::-;6523:22;:62;;;6595:4;:12;;;6641:16;;6659:18;;6623:85;;;3509:25:58;;;3565:2;3550:18;;3543:34;;;;3593:18;;3586:34;;;;3651:2;3636:18;;3629:34;;;6623:85:21;;3496:3:58;3481:19;6623:85:21;;;;;;;6188:527;;;;:::o;5202:497::-;5383:7;;5438:28;5445:21;551:4;5438:28;:::i;:::-;5406:60;;5476:18;5497:46;5519:4;5525:7;5534:8;5497:21;:46::i;:::-;5476:67;-1:-1:-1;5553:18:21;551:4;5574:34;5587:21;5476:67;5574:34;:::i;:::-;:41;;;;:::i;:::-;5553:62;;551:4;5675:10;5632:40;5648:4;5654:7;5663:8;5632:15;:40::i;:::-;:53;;;;:::i;:::-;:60;;;;:::i;14:466:58:-;91:6;99;107;160:2;148:9;139:7;135:23;131:32;128:52;;;176:1;173;166:12;128:52;-1:-1:-1;;221:23:58;;;341:2;326:18;;313:32;;-1:-1:-1;444:2:58;429:18;;;416:32;;14:466;-1:-1:-1;14:466:58:o;667:587::-;753:6;761;769;777;830:3;818:9;809:7;805:23;801:33;798:53;;;847:1;844;837:12;798:53;-1:-1:-1;;892:23:58;;;1012:2;997:18;;984:32;;-1:-1:-1;1115:2:58;1100:18;;1087:32;;1218:2;1203:18;1190:32;;-1:-1:-1;667:587:58;-1:-1:-1;667:587:58:o;1905:343::-;1984:6;1992;2045:2;2033:9;2024:7;2020:23;2016:32;2013:52;;;2061:1;2058;2051:12;2013:52;-1:-1:-1;;2106:16:58;;2212:2;2197:18;;;2191:25;2106:16;;2191:25;;-1:-1:-1;1905:343:58:o;2253:230::-;2323:6;2376:2;2364:9;2355:7;2351:23;2347:32;2344:52;;;2392:1;2389;2382:12;2344:52;-1:-1:-1;2437:16:58;;2253:230;-1:-1:-1;2253:230:58:o;2488:127::-;2549:10;2544:3;2540:20;2537:1;2530:31;2580:4;2577:1;2570:15;2604:4;2601:1;2594:15;2620:125;2685:9;;;2706:10;;;2703:36;;;2719:18;;:::i;:::-;2620:125;;;;:::o;2750:128::-;2817:9;;;2838:11;;;2835:37;;;2852:18;;:::i;2883:217::-;2923:1;2949;2939:132;;2993:10;2988:3;2984:20;2981:1;2974:31;3028:4;3025:1;3018:15;3056:4;3053:1;3046:15;2939:132;-1:-1:-1;3085:9:58;;2883:217::o;3105:168::-;3178:9;;;3209;;3226:15;;;3220:22;;3206:37;3196:71;;3247:18;;:::i","linkReferences":{}},"methodIdentifiers":{"assumedOneMinusReserveFactorMantissa()":"6dac7cd5","baseRatePerBlock()":"f14039de","blocksPerYear()":"a385fb96","dsrPerBlock()":"96456c5c","gapPerBlock()":"f52d21f3","getBorrowRate(uint256,uint256,uint256)":"15f24053","getSupplyRate(uint256,uint256,uint256,uint256)":"b8168816","isInterestRateModel()":"2191f92a","jumpMultiplierPerBlock()":"b9f9850a","kink()":"fd2da339","multiplierPerBlock()":"8726bb89","owner()":"8da5cb5b","poke()":"18178358","updateJumpRateModel(uint256,uint256,uint256,uint256)":"2037f3e7","utilizationRate(uint256,uint256,uint256)":"6e71e2d8"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"jumpMultiplierPerYear\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kink_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pot_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"jug_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseRatePerBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"multiplierPerBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"jumpMultiplierPerBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"kink\",\"type\":\"uint256\"}],\"name\":\"NewInterestParams\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"assumedOneMinusReserveFactorMantissa\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseRatePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blocksPerYear\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dsrPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gapPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrows\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserves\",\"type\":\"uint256\"}],\"name\":\"getBorrowRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrows\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveFactorMantissa\",\"type\":\"uint256\"}],\"name\":\"getSupplyRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isInterestRateModel\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"jumpMultiplierPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kink\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"multiplierPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"baseRatePerYear\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gapPerYear\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"jumpMultiplierPerYear\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kink_\",\"type\":\"uint256\"}],\"name\":\"updateJumpRateModel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrows\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserves\",\"type\":\"uint256\"}],\"name\":\"utilizationRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Compound (modified by Dharma Labs)\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"jug_\":\"The address of the Dai jug (where SF is kept)\",\"jumpMultiplierPerYear\":\"The multiplierPerBlock after hitting a specified utilization point\",\"kink_\":\"The utilization point at which the jump multiplier is applied\",\"owner_\":\"The address of the owner, i.e. the Timelock contract (which has the ability to update parameters directly)\",\"pot_\":\"The address of the Dai pot (where DSR is earned)\"}},\"dsrPerBlock()\":{\"returns\":{\"_0\":\"The Dai savings rate per block (as a percentage, and scaled by BASE)\"}},\"getBorrowRate(uint256,uint256,uint256)\":{\"params\":{\"borrows\":\"The amount of borrows in the market\",\"cash\":\"The amount of cash in the market\",\"reserves\":\"The amount of reserves in the market\"},\"returns\":{\"_0\":\"The borrow rate percentage per block as a mantissa (scaled by 1e18)\"}},\"getSupplyRate(uint256,uint256,uint256,uint256)\":{\"params\":{\"borrows\":\"The total amount of borrows the market has outstanding\",\"cash\":\"The total amount of cash the market has\",\"reserveFactorMantissa\":\"The current reserve factor the market has\",\"reserves\":\"The total amnount of reserves the market has\"},\"returns\":{\"_0\":\"The supply rate per block (as a percentage, and scaled by BASE)\"}},\"updateJumpRateModel(uint256,uint256,uint256,uint256)\":{\"params\":{\"baseRatePerYear\":\"The approximate target base APR, as a mantissa (scaled by BASE). For DAI, this is calculated from DSR and SF. Input not used.\",\"gapPerYear\":\"The Additional margin per year separating the base borrow rate from the roof. (scaled by BASE)\",\"jumpMultiplierPerYear\":\"The jumpMultiplierPerYear after hitting a specified utilization point\",\"kink_\":\"The utilization point at which the jump multiplier is applied\"}},\"utilizationRate(uint256,uint256,uint256)\":{\"params\":{\"borrows\":\"The amount of borrows in the market\",\"cash\":\"The amount of cash in the market\",\"reserves\":\"The amount of reserves in the market (currently unused)\"},\"returns\":{\"_0\":\"The utilization rate as a mantissa between [0, BASE]\"}}},\"title\":\"Compound's DAIInterestRateModel Contract (version 3)\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"assumedOneMinusReserveFactorMantissa()\":{\"notice\":\"The assumed (1 - reserve factor) used to calculate the minimum borrow rate (reserve factor = 0.05)\"},\"baseRatePerBlock()\":{\"notice\":\"The base interest rate which is the y-intercept when utilization rate is 0\"},\"blocksPerYear()\":{\"notice\":\"The approximate number of blocks per year that is assumed by the interest rate model\"},\"constructor\":{\"notice\":\"Construct an interest rate model\"},\"dsrPerBlock()\":{\"notice\":\"Calculates the Dai savings rate per block\"},\"gapPerBlock()\":{\"notice\":\"The additional margin per block separating the base borrow rate from the roof.\"},\"getBorrowRate(uint256,uint256,uint256)\":{\"notice\":\"Calculates the current borrow rate per block\"},\"getSupplyRate(uint256,uint256,uint256,uint256)\":{\"notice\":\"Calculates the current supply interest rate per block including the Dai savings rate\"},\"isInterestRateModel()\":{\"notice\":\"Indicator that this is an InterestRateModel contract (for inspection)\"},\"jumpMultiplierPerBlock()\":{\"notice\":\"The multiplierPerBlock after hitting a specified utilization point\"},\"kink()\":{\"notice\":\"The utilization point at which the jump multiplier is applied\"},\"multiplierPerBlock()\":{\"notice\":\"The multiplier of utilization rate that gives the slope of the interest rate\"},\"owner()\":{\"notice\":\"The address of the owner, i.e. the Timelock contract, which can update parameters directly\"},\"poke()\":{\"notice\":\"Resets the baseRate and multiplier per block based on the stability fee and Dai savings rate\"},\"updateJumpRateModel(uint256,uint256,uint256,uint256)\":{\"notice\":\"External function to update the parameters of the interest rate model\"},\"utilizationRate(uint256,uint256,uint256)\":{\"notice\":\"Calculates the utilization rate of the market: `borrows / (cash + borrows - reserves)`\"}},\"notice\":\"The parameterized model described in section 2.4 of the original Compound Protocol whitepaper. Version 3 modifies the interest rate model in Version 2 by increasing the initial \\\"gap\\\" or slope of the model prior to the \\\"kink\\\" from 2% to 4%, and enabling updateable parameters.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/DAIInterestRateModelV3.sol\":\"DAIInterestRateModelV3\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/BaseJumpRateModelV2.sol\":{\"keccak256\":\"0x5c1205475418ee11107e62623ec159c7ea2d4d89c2b9f4c3f676bd3a86d3622b\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://7cd60d7d4e7cd9e296bc77199e25d8866e33351e4636ff18e3ec9f12e3c90542\",\"dweb:/ipfs/QmdiqsV6egWDVFD7qC8afhiBCVcKxPc54ycY23Q6A7xKoC\"]},\"src/DAIInterestRateModelV3.sol\":{\"keccak256\":\"0x666a33af548df2dfa3894eb4eb738c80f75775e786e087f59ea5e9e411a2f8b3\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://3d17cc331e205c570b98e12715d7c4ce7eb5a77b4c394823b9d3ac5b53cad771\",\"dweb:/ipfs/QmbvsL3neEryDfHXAG74jq9YVdCM3zWErU8AGX1BNWSzyH\"]},\"src/InterestRateModel.sol\":{\"keccak256\":\"0x541b268d80b11872206250c512a8b84450272f1f68c0c601b7c376398c1ac2d9\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://76e6dea54091990aeb3a3aa3821e2d7fa4eec98654c21553d91687d053f3558a\",\"dweb:/ipfs/QmWzPcR8KL8D5LdwkRAFRG5eRY3Vmuspwh97M2L2iMKjd5\"]},\"src/JumpRateModelV2.sol\":{\"keccak256\":\"0xfaecc87c44a58c4c6ce6403f20bbe52f50f2c1868700deffb5c17e682fad962d\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://cd8510ed3bf6962ee0023fe3c23d77e7ef359788df61b4d8d437fc1c32cc5d65\",\"dweb:/ipfs/QmS8xZzLhPggkqpxhsJmsbVE5QGM4PSkW7kwqVCkFLnLPQ\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"jumpMultiplierPerYear","type":"uint256"},{"internalType":"uint256","name":"kink_","type":"uint256"},{"internalType":"address","name":"pot_","type":"address"},{"internalType":"address","name":"jug_","type":"address"},{"internalType":"address","name":"owner_","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint256","name":"baseRatePerBlock","type":"uint256","indexed":false},{"internalType":"uint256","name":"multiplierPerBlock","type":"uint256","indexed":false},{"internalType":"uint256","name":"jumpMultiplierPerBlock","type":"uint256","indexed":false},{"internalType":"uint256","name":"kink","type":"uint256","indexed":false}],"type":"event","name":"NewInterestParams","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"assumedOneMinusReserveFactorMantissa","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"baseRatePerBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"blocksPerYear","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"dsrPerBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"gapPerBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"cash","type":"uint256"},{"internalType":"uint256","name":"borrows","type":"uint256"},{"internalType":"uint256","name":"reserves","type":"uint256"}],"stateMutability":"view","type":"function","name":"getBorrowRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"cash","type":"uint256"},{"internalType":"uint256","name":"borrows","type":"uint256"},{"internalType":"uint256","name":"reserves","type":"uint256"},{"internalType":"uint256","name":"reserveFactorMantissa","type":"uint256"}],"stateMutability":"view","type":"function","name":"getSupplyRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"isInterestRateModel","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"jumpMultiplierPerBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"kink","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"multiplierPerBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"poke"},{"inputs":[{"internalType":"uint256","name":"baseRatePerYear","type":"uint256"},{"internalType":"uint256","name":"gapPerYear","type":"uint256"},{"internalType":"uint256","name":"jumpMultiplierPerYear","type":"uint256"},{"internalType":"uint256","name":"kink_","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"updateJumpRateModel"},{"inputs":[{"internalType":"uint256","name":"cash","type":"uint256"},{"internalType":"uint256","name":"borrows","type":"uint256"},{"internalType":"uint256","name":"reserves","type":"uint256"}],"stateMutability":"pure","type":"function","name":"utilizationRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"constructor":{"params":{"jug_":"The address of the Dai jug (where SF is kept)","jumpMultiplierPerYear":"The multiplierPerBlock after hitting a specified utilization point","kink_":"The utilization point at which the jump multiplier is applied","owner_":"The address of the owner, i.e. the Timelock contract (which has the ability to update parameters directly)","pot_":"The address of the Dai pot (where DSR is earned)"}},"dsrPerBlock()":{"returns":{"_0":"The Dai savings rate per block (as a percentage, and scaled by BASE)"}},"getBorrowRate(uint256,uint256,uint256)":{"params":{"borrows":"The amount of borrows in the market","cash":"The amount of cash in the market","reserves":"The amount of reserves in the market"},"returns":{"_0":"The borrow rate percentage per block as a mantissa (scaled by 1e18)"}},"getSupplyRate(uint256,uint256,uint256,uint256)":{"params":{"borrows":"The total amount of borrows the market has outstanding","cash":"The total amount of cash the market has","reserveFactorMantissa":"The current reserve factor the market has","reserves":"The total amnount of reserves the market has"},"returns":{"_0":"The supply rate per block (as a percentage, and scaled by BASE)"}},"updateJumpRateModel(uint256,uint256,uint256,uint256)":{"params":{"baseRatePerYear":"The approximate target base APR, as a mantissa (scaled by BASE). For DAI, this is calculated from DSR and SF. Input not used.","gapPerYear":"The Additional margin per year separating the base borrow rate from the roof. (scaled by BASE)","jumpMultiplierPerYear":"The jumpMultiplierPerYear after hitting a specified utilization point","kink_":"The utilization point at which the jump multiplier is applied"}},"utilizationRate(uint256,uint256,uint256)":{"params":{"borrows":"The amount of borrows in the market","cash":"The amount of cash in the market","reserves":"The amount of reserves in the market (currently unused)"},"returns":{"_0":"The utilization rate as a mantissa between [0, BASE]"}}},"version":1},"userdoc":{"kind":"user","methods":{"assumedOneMinusReserveFactorMantissa()":{"notice":"The assumed (1 - reserve factor) used to calculate the minimum borrow rate (reserve factor = 0.05)"},"baseRatePerBlock()":{"notice":"The base interest rate which is the y-intercept when utilization rate is 0"},"blocksPerYear()":{"notice":"The approximate number of blocks per year that is assumed by the interest rate model"},"constructor":{"notice":"Construct an interest rate model"},"dsrPerBlock()":{"notice":"Calculates the Dai savings rate per block"},"gapPerBlock()":{"notice":"The additional margin per block separating the base borrow rate from the roof."},"getBorrowRate(uint256,uint256,uint256)":{"notice":"Calculates the current borrow rate per block"},"getSupplyRate(uint256,uint256,uint256,uint256)":{"notice":"Calculates the current supply interest rate per block including the Dai savings rate"},"isInterestRateModel()":{"notice":"Indicator that this is an InterestRateModel contract (for inspection)"},"jumpMultiplierPerBlock()":{"notice":"The multiplierPerBlock after hitting a specified utilization point"},"kink()":{"notice":"The utilization point at which the jump multiplier is applied"},"multiplierPerBlock()":{"notice":"The multiplier of utilization rate that gives the slope of the interest rate"},"owner()":{"notice":"The address of the owner, i.e. the Timelock contract, which can update parameters directly"},"poke()":{"notice":"Resets the baseRate and multiplier per block based on the stability fee and Dai savings rate"},"updateJumpRateModel(uint256,uint256,uint256,uint256)":{"notice":"External function to update the parameters of the interest rate model"},"utilizationRate(uint256,uint256,uint256)":{"notice":"Calculates the utilization rate of the market: `borrows / (cash + borrows - reserves)`"}},"version":1}},"settings":{"remappings":["forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/DAIInterestRateModelV3.sol":"DAIInterestRateModelV3"},"evmVersion":"paris","libraries":{}},"sources":{"src/BaseJumpRateModelV2.sol":{"keccak256":"0x5c1205475418ee11107e62623ec159c7ea2d4d89c2b9f4c3f676bd3a86d3622b","urls":["bzz-raw://7cd60d7d4e7cd9e296bc77199e25d8866e33351e4636ff18e3ec9f12e3c90542","dweb:/ipfs/QmdiqsV6egWDVFD7qC8afhiBCVcKxPc54ycY23Q6A7xKoC"],"license":"BSD-3-Clause"},"src/DAIInterestRateModelV3.sol":{"keccak256":"0x666a33af548df2dfa3894eb4eb738c80f75775e786e087f59ea5e9e411a2f8b3","urls":["bzz-raw://3d17cc331e205c570b98e12715d7c4ce7eb5a77b4c394823b9d3ac5b53cad771","dweb:/ipfs/QmbvsL3neEryDfHXAG74jq9YVdCM3zWErU8AGX1BNWSzyH"],"license":"BSD-3-Clause"},"src/InterestRateModel.sol":{"keccak256":"0x541b268d80b11872206250c512a8b84450272f1f68c0c601b7c376398c1ac2d9","urls":["bzz-raw://76e6dea54091990aeb3a3aa3821e2d7fa4eec98654c21553d91687d053f3558a","dweb:/ipfs/QmWzPcR8KL8D5LdwkRAFRG5eRY3Vmuspwh97M2L2iMKjd5"],"license":"BSD-3-Clause"},"src/JumpRateModelV2.sol":{"keccak256":"0xfaecc87c44a58c4c6ce6403f20bbe52f50f2c1868700deffb5c17e682fad962d","urls":["bzz-raw://cd8510ed3bf6962ee0023fe3c23d77e7ef359788df61b4d8d437fc1c32cc5d65","dweb:/ipfs/QmS8xZzLhPggkqpxhsJmsbVE5QGM4PSkW7kwqVCkFLnLPQ"],"license":"BSD-3-Clause"}},"version":1},"id":35}